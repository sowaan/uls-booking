[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2024-10-14 15:50:39.099959",
  "module": "ULS Booking",
  "name": "Selling Percentage",
  "script": "frappe.ui.form.on('Sales Invoice', {\n    custom_selling_percentage(frm) {\n    // Get the custom selling percentage value\n        const customPercentage = frm.doc.custom_selling_percentage;\n\n        // Find the row with the item code \"S\"\n        const exportSaverItem = frm.doc.items.find(item => item.item_code === \"S\");\n\n        if (exportSaverItem) {\n            // Get the original amount\n            const originalAmount = exportSaverItem.amount; // Assuming 'amount' is the correct field\n            \n            // Calculate the discount amount based on the custom selling percentage\n            const discountAmount = (originalAmount * customPercentage) / 100; // Calculate the discount\n           \n\n            // Update the item directly in the items array\n            frm.set_value(\"discount_amount\",discountAmount);\n\n        // Calculate rate\n        const rate = originalAmount - discountAmount;\n\n        // Fetch the percentage from the Additional Charges doctype\n        frappe.db.get_doc(\"Additional Charges\", \"Fuel Surcharge\").then((FSC_additional) => {\n            const percentage = FSC_additional.percentage;\n\n            // Assuming total_fuel is defined somewhere in your form\n            const total_fuel = frm.doc.total_surcharges_incl_fuel_charges; // Make sure this field exists\n\n            // Calculate fsc_vv\n            const fsc_vv = (rate + total_fuel) * percentage / 100;\n\n            // Find the row with the item code \"FSC\"\n            const fscItem = frm.doc.items.find(item => item.item_code === \"FSC\");\n\n            if (fscItem) {\n                // Set the rate for the FSC item\n                frappe.model.set_value(\"Sales Invoice Item\", fscItem.name, \"rate\", fsc_vv);\n                // fscItem.rate = fsc_vv; // Update the rate\n                frm.refresh_field('items'); // Refresh the item table to reflect changes\n            } else {\n                console.log(\"FSC item not found in the invoice items.\");\n            }\n        });\n    } else {\n        console.log(\"Export Saver item not found in the invoice items.\");\n    }\n},\n    \n    async custom_insurance_amount(frm) {\n    if (frm.doc.custom_insurance_amount) {\n        const insured_amt = frm.doc.custom_insurance_amount;\n\n        try {\n           \n            const response = await frappe.call({\n                method: \"frappe.client.get\",\n                args: {\n                    doctype: \"Additional Charges\",\n                    name: \"Declare Value\"\n                }\n            });\n\n            const declare = response.message;\n\n            if (!declare) {\n                console.error(\"Declare Value document not found.\");\n                return; // Exit if document is not found\n            }\n\n            const minimum = declare.minimum_amount;\n            const percentage = declare.percentage;\n\n            const after_perc = insured_amt * (percentage /100);\n            console.log(after_perc);\n\n            if (after_perc > minimum) {\n                const INSITEM = frm.doc.items.find(item => item.item_code === \"INS\");\n                if (INSITEM) {\n                    frappe.model.set_value(\"Sales Invoice Item\", INSITEM.name, \"rate\", after_perc);\n                    console.log(INSITEM.rate);\n                    frm.refresh_field(\"items\");\n                } else {\n                    console.error(\"INS item not found in items.\");\n                }\n            }\n        } catch (error) {\n            console.error(\"Error fetching Declare Value:\", error);\n        }\n    }\n}\n    \n    \n    \n    \n});",
  "view": "Form"
 }
]